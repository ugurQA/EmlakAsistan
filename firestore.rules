rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.role == 'YÃ¶netici';
    }

    function isAgent() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.role == 'Temsilci';
    }

    // Properties collection rules
    match /properties/{document=**} {
      allow read: if true;  // Public read access
      allow create: if isAuthenticated() && (isAdmin() || isAgent());
      allow update, delete: if isAuthenticated() && 
        (resource.data.agent == request.auth.token.email || isAdmin());
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin() || (isAuthenticated() && userId == request.auth.token.email);
      allow delete: if isAdmin();
    }

    // Counters collection rules
    match /counters/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}